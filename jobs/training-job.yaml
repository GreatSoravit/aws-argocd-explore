apiVersion: batch/v1
kind: Job
metadata:
  # name will be updated dynamically by GitHub Action to be unique for each run
  name: colon-cancer-training-job-d2ddfa13b1c4f49b61160e47e893a1cb69c94abb
  # Deploy this job into the 'ml-jobs' namespace
  namespace: ml-jobs
spec:
  template:
    spec:
      # Reference the Service Account that is linked to the IAM Role
      serviceAccountName: training-job-sa
      
      # Define the initContainer. It runs to completion before the main container starts.
      initContainers:
      - name: s3-data-downloader
        image: amazon/aws-cli:latest
        command:
          - "aws"
          - "s3"
          - "sync"
          - "s3://colon-cancer-train-data/data/" # Source in S3
          - "/app/data" # Destination in the shared volume
        volumeMounts:
        - name: data
          mountPath: /app/data
    
      containers:
      - name: training-container
        # The image tag will be updated by GitHub Action.
        image: soravitwetprasit/mlops-model-train:placeholder
        
        # Arguments to pass to training_script.sh inside the container
        args: 
          - "bash"
          - "-c"
          - |
            ./training_script.sh --train --epochs 100 --seed 42 &&
            aws s3 cp /app/models/best_colon_cancer_model.pth s3://colon-cancer-train-data/models/best_colon_cancer_model-$(date +%s).pth &&
            aws s3 cp /app/logs/training_history.json s3://colon-cancer-train-data/outputs/training_history-$(date +%s).json
        # Request a GPU for the training job
        resources:
          limits:
            nvidia.com/gpu: 1
        volumeMounts:
          - name: data
            mountPath: /app/data
          - name: models
            mountPath: /app/models
          - name: outputs
            mountPath: /app/outputs
          - name: logs
            mountPath: /app/logs
                 
      volumes:
      - name: data
        emptyDir: {}
      - name: models
        emptyDir: {}
      - name: outputs
        emptyDir: {}
      - name: logs
        emptyDir: {}
        
      # This policy means the pod will not be restarted if the job completes successfully
      restartPolicy: OnFailure
  
  # The job will be terminated if it fails more than once.
  backoffLimit: 1